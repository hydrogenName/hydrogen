{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/xiuxiuding/Documents/work/hydrogen/scripts\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/xiuxiuding/Documents/work/hydrogen\",\"filename\":\"/Users/xiuxiuding/Documents/work/hydrogen/scripts/build.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/xiuxiuding/Documents/work/hydrogen\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/xiuxiuding/Documents/work/hydrogen/scripts",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/xiuxiuding/Documents/work/hydrogen",
      "filename": "/Users/xiuxiuding/Documents/work/hydrogen/scripts/build.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/xiuxiuding/Documents/work/hydrogen",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/xiuxiuding/Documents/work/hydrogen/scripts/build.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/xiuxiuding/Documents/work/hydrogen/scripts/build.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/xiuxiuding/Documents/work/hydrogen/scripts",
        "sourceFileName": "build.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar ora = require('ora');\n\nvar _require = require('rollup'),\n    rollup = _require.rollup;\n\nvar cjs = require('rollup-plugin-commonjs');\n\nvar building = ora('building...');\n\nif (!fs.existsSync('lib')) {\n  fs.mkdirSync('lib');\n}\n\nvar builds = require('./config').getAllBuilds();\n\nvar defaultPlugins = require('./config').defaultPlugins; // 构建config.js配置的全量包\n\n\nfunction buildConfig(builds) {\n  building.start();\n  var built = 0;\n  var total = builds.length;\n\n  var next = function next() {\n    buildEntry(builds[built]).then(function () {\n      built++;\n\n      if (built < total) {\n        next();\n      }\n    }).then(function () {\n      building.stop();\n    })[\"catch\"](logError);\n  };\n\n  next();\n} // 构建Fn\n\n\nfunction buildEntry(config) {\n  var output = config.output;\n  var file = output.file;\n  return rollup(config).then(function (bundle) {\n    return bundle.generate(output);\n  }).then(function (_ref) {\n    var _ref$output = _slicedToArray(_ref.output, 1),\n        code = _ref$output[0].code;\n\n    return write(file, code);\n  });\n} // 打印日志\n\n\nfunction write(dest, code) {\n  return new Promise(function (resolve, reject) {\n    function report(extra) {\n      console.log(\"\".concat(blue(path.relative(process.cwd(), dest)), \"  \").concat(getSize(code)).concat(extra || ''));\n      resolve();\n    }\n\n    fs.writeFile(dest, code, function (err) {\n      if (err) return reject(err);\n      report();\n    });\n  });\n} // 获取文件大小\n\n\nfunction getSize(code) {\n  return \"\".concat((code.length / 1024).toFixed(2), \"kb\");\n} // 输出错误日志\n\n\nfunction logError(e) {\n  building.stop();\n  console.log(e);\n} // 设置颜色\n\n\nfunction blue(str) {\n  return '\\x1b[1m\\x1b[34m' + str + '\\x1b[39m\\x1b[22m';\n} // 处理字符串，头字母大写\n\n\nfunction firstUpperCase(str) {\n  return str.replace(/^\\S/, function (s) {\n    return s.toUpperCase();\n  });\n} // 导出单个函数\n\n\nfunction buildSingleFn() {\n  var targetPath1 = path.resolve(__dirname, '../', 'dist/src/');\n  var dir1 = fs.readdirSync(targetPath1);\n  console.log(dir1);\n  dir1.map(function (type) {\n    if (/index.js/.test(type)) return;\n    var targetPath2 = path.resolve(__dirname, '../', \"dist/src/\".concat(type));\n    var dir2 = fs.readdirSync(targetPath2);\n    dir2.map(function (fn) {\n      if (/.map/.test(fn)) return;\n\n      try {\n        var targetPath3 = path.resolve(__dirname, '../', \"dist/src/\".concat(type, \"/\").concat(fn));\n        fs.readFile(targetPath3, /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(err, data) {\n            var handleContent, libPath, moduleName, config;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (!err) {\n                      _context.next = 2;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\");\n\n                  case 2:\n                    handleContent = data.toString().replace(/require\\(\".{1,2}\\/[\\w\\/]+\"\\)/g, function (match) {\n                      // match 为 require(\"../collection/each\") => require(\"./each\")\n                      var splitArr = match.split('/');\n                      var lastStr = splitArr[splitArr.length - 1].slice(0, -2);\n                      var handleStr = \"require('./\".concat(lastStr, \"')\");\n                      return handleStr;\n                    });\n                    libPath = path.resolve(__dirname, '../', 'lib');\n                    _context.next = 6;\n                    return fs.writeFileSync(\"\".concat(libPath, \"/\").concat(fn), handleContent);\n\n                  case 6:\n                    //单个函数rollup打包到lib文件根目录下\n                    moduleName = firstUpperCase(fn.replace(/.js/, ''));\n                    config = {\n                      input: path.resolve(__dirname, '../', \"lib/\".concat(fn)),\n                      plugins: defaultPlugins,\n                      external: ['tslib'],\n                      // 由于函数用ts编写，使用external外部引用tslib，减少打包体积\n                      output: {\n                        file: \"lib/\".concat(fn),\n                        format: 'umd',\n                        name: \"m\".concat(moduleName),\n                        globals: {\n                          tslib: 'tslib'\n                        }\n                      }\n                    };\n                    _context.next = 10;\n                    return buildEntry(config);\n\n                  case 10:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x, _x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      } catch (e) {\n        logError(e);\n      }\n    });\n  });\n} // 构建打包（全量和单个）\n\n\nfunction build() {\n  return _build.apply(this, arguments);\n}\n\nfunction _build() {\n  _build = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!fs.existsSync(path.resolve(__dirname, '../', 'lib'))) {\n              fs.mkdirSync(path.resolve(__dirname, '../', 'lib'));\n            }\n\n            building.start();\n            _context2.t0 = Promise;\n            _context2.next = 5;\n            return buildConfig(builds);\n\n          case 5:\n            _context2.t1 = _context2.sent;\n            _context2.next = 8;\n            return buildSingleFn();\n\n          case 8:\n            _context2.t2 = _context2.sent;\n            _context2.t3 = [_context2.t1, _context2.t2];\n\n            _context2.t4 = function (_ref3) {\n              var _ref4 = _slicedToArray(_ref3, 2),\n                  result1 = _ref4[0],\n                  result2 = _ref4[1];\n\n              building.stop();\n            };\n\n            _context2.t5 = logError;\n\n            _context2.t0.all.call(_context2.t0, _context2.t3).then(_context2.t4)[\"catch\"](_context2.t5);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _build.apply(this, arguments);\n}\n\nbuild();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "build.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "ora",
        "rollup",
        "cjs",
        "building",
        "existsSync",
        "mkdirSync",
        "builds",
        "getAllBuilds",
        "defaultPlugins",
        "buildConfig",
        "start",
        "built",
        "total",
        "length",
        "next",
        "buildEntry",
        "then",
        "stop",
        "logError",
        "config",
        "output",
        "file",
        "bundle",
        "generate",
        "code",
        "write",
        "dest",
        "Promise",
        "resolve",
        "reject",
        "report",
        "extra",
        "console",
        "log",
        "blue",
        "relative",
        "process",
        "cwd",
        "getSize",
        "writeFile",
        "err",
        "toFixed",
        "e",
        "str",
        "firstUpperCase",
        "replace",
        "s",
        "toUpperCase",
        "buildSingleFn",
        "targetPath1",
        "__dirname",
        "dir1",
        "readdirSync",
        "map",
        "type",
        "test",
        "targetPath2",
        "dir2",
        "fn",
        "targetPath3",
        "readFile",
        "data",
        "handleContent",
        "toString",
        "match",
        "splitArr",
        "split",
        "lastStr",
        "slice",
        "handleStr",
        "libPath",
        "writeFileSync",
        "moduleName",
        "input",
        "plugins",
        "external",
        "format",
        "name",
        "globals",
        "tslib",
        "build",
        "result1",
        "result2",
        "all"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/xiuxiuding/Documents/work/hydrogen/scripts",
      "sourcesContent": [
        "const fs = require('fs')\nconst path = require('path')\nconst ora = require('ora')\nconst { rollup } = require('rollup')\nconst cjs = require('rollup-plugin-commonjs')\n\nlet building = ora('building...');\n\nif (!fs.existsSync('lib')) {\n  fs.mkdirSync('lib')\n}\nlet builds = require('./config').getAllBuilds()\nlet defaultPlugins = require('./config').defaultPlugins;\n\n// 构建config.js配置的全量包\nfunction buildConfig(builds) {\n  building.start();\n  let built = 0;\n  const total = builds.length;\n  const next = () => {\n    buildEntry(builds[built]).then(() => {\n      built++;\n      if (built < total) {\n        next()\n      }\n    }).then(() => {\n      building.stop()\n    }).catch(logError)\n  }\n  next()\n}\n\n// 构建Fn\nfunction buildEntry(config) {\n  const output = config.output;\n  const { file } = output;\n  return rollup(config).then(bundle => bundle.generate(output)).then(({ output: [{ code }] }) => {\n    return write(file, code);\n  })\n}\n\n// 打印日志\nfunction write(dest, code) {\n  return new Promise((resolve, reject) => {\n    function report(extra) {\n      console.log(`${blue(path.relative(process.cwd(), dest))}  ${getSize(code)}${extra || ''}`)\n      resolve()\n    }\n    fs.writeFile(dest, code, err => {\n      if (err) return reject(err);\n      report()\n    })\n  })\n}\n\n// 获取文件大小\nfunction getSize(code) {\n  return `${(code.length / 1024).toFixed(2)}kb`\n}\n\n// 输出错误日志\nfunction logError(e) {\n  building.stop()\n  console.log(e)\n}\n\n// 设置颜色\nfunction blue(str) {\n  return '\\x1b[1m\\x1b[34m' + str + '\\x1b[39m\\x1b[22m'\n}\n\n// 处理字符串，头字母大写\nfunction firstUpperCase(str) {\n  return str.replace(/^\\S/,function(s){return s.toUpperCase();});\n}\n\n// 导出单个函数\nfunction buildSingleFn() {\n  const targetPath1 = path.resolve(__dirname, '../', 'dist/src/')\n  const dir1 = fs.readdirSync(targetPath1)\n  console.log(dir1);\n  dir1.map(type => {\n    if (/index.js/.test(type)) return;\n    const targetPath2 = path.resolve(__dirname, '../', `dist/src/${type}`)\n    const dir2 = fs.readdirSync(targetPath2)\n    dir2.map(fn => {\n      if (/.map/.test(fn)) return;\n      try {\n        const targetPath3 = path.resolve(__dirname, '../', `dist/src/${type}/${fn}`)\n        fs.readFile(targetPath3, async (err, data) => {\n            if(err) return;\n            const handleContent = data.toString().replace(/require\\(\".{1,2}\\/[\\w\\/]+\"\\)/g, (match) => {\n              // match 为 require(\"../collection/each\") => require(\"./each\")\n              const splitArr = match.split('/')\n              const lastStr = splitArr[splitArr.length - 1].slice(0, -2)\n              const handleStr = `require('./${lastStr}')`\n              return handleStr\n            })\n            const libPath = path.resolve(__dirname, '../', 'lib')\n            await fs.writeFileSync(`${libPath}/${fn}`, handleContent)\n             //单个函数rollup打包到lib文件根目录下\n            let moduleName = firstUpperCase(fn.replace(/.js/,''));\n            let config = {\n              input: path.resolve(__dirname, '../', `lib/${fn}`),\n              plugins: defaultPlugins,\n              external: ['tslib'],  // 由于函数用ts编写，使用external外部引用tslib，减少打包体积\n              output: {\n                file: `lib/${fn}`,\n                format: 'umd',\n                name: `m${moduleName}`,\n                globals: {\n                  tslib:'tslib'\n                },\n              }\n            }\n            await buildEntry(config);\n          })\n      } catch (e) {\n        logError(e);\n      }\n    })\n  })\n}\n\n// 构建打包（全量和单个）\nasync function build() {\n  if (!fs.existsSync(path.resolve(__dirname, '../', 'lib'))) {\n    fs.mkdirSync(path.resolve(__dirname, '../', 'lib'))\n  }\n  building.start()\n  Promise.all([\n    await buildConfig(builds),\n    await buildSingleFn(),\n  ]).then(([result1, result2]) => {\n    building.stop()\n  }).catch(logError)\n}\n\nbuild();"
      ]
    },
    "sourceType": "script",
    "mtime": 1636430325554
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/xiuxiuding/Documents/work/hydrogen/scripts\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/xiuxiuding/Documents/work/hydrogen\",\"filename\":\"/Users/xiuxiuding/Documents/work/hydrogen/scripts/config.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/xiuxiuding/Documents/work/hydrogen\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/xiuxiuding/Documents/work/hydrogen/scripts",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/xiuxiuding/Documents/work/hydrogen",
      "filename": "/Users/xiuxiuding/Documents/work/hydrogen/scripts/config.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/xiuxiuding/Documents/work/hydrogen",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/xiuxiuding/Documents/work/hydrogen/scripts/config.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/xiuxiuding/Documents/work/hydrogen/scripts/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/xiuxiuding/Documents/work/hydrogen/scripts",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar path = require('path');\n\nvar node = require('rollup-plugin-node-resolve'); // 支持第三方包\n\n\nvar cjs = require('rollup-plugin-commonjs'); // 转commonjs to es\n\n\nvar buble = require('rollup-plugin-buble'); // 转为es5\n\n\nvar _require = require('rollup-plugin-terser'),\n    terser = _require.terser; // 代码压缩\n\n\nvar version = process.env.VERSION || require('../package.json').version;\n\nvar resolve = function resolve(p) {\n  return path.resolve(__dirname, '../', p);\n}; // 默认配置\n\n\nvar defaultPlugins = [node(), cjs(), buble()];\nvar builds = {\n  'fe-utils': {\n    entry: resolve('dist/src/index.js'),\n    dest: resolve('lib/fe-utils.js'),\n    format: 'umd',\n    moduleName: 'feUtils',\n    plugins: defaultPlugins\n  },\n  'fe-utils-min': {\n    entry: resolve('dist/src/index.js'),\n    dest: resolve('lib/fe-utils-min.js'),\n    format: 'umd',\n    moduleName: 'feUtils',\n    plugins: [].concat(defaultPlugins, [terser()])\n  },\n  'fe-utils-cjs': {\n    entry: resolve('dist/src/index.js'),\n    dest: resolve('lib/fe-utils-cjs.js'),\n    format: 'cjs',\n    plugins: defaultPlugins\n  },\n  'fe-utils-esm': {\n    entry: resolve('dist/src/index.js'),\n    dest: resolve('lib/fe-utils-esm.js'),\n    format: 'es',\n    plugins: defaultPlugins\n  }\n};\n/**\n * 获取对应name的打包配置\n * @param {*} name \n */\n\nfunction getConfig(name) {\n  var opts = builds[name];\n  var config = {\n    input: opts.entry,\n    external: opts.external || [],\n    plugins: opts.plugins || [],\n    output: {\n      file: opts.dest,\n      format: opts.format,\n      name: opts.moduleName || 'feUtils',\n      globals: opts.globals,\n      exports: 'named'\n      /** Disable warning for default imports */\n\n    },\n    onwarn: function onwarn(msg, warn) {\n      warn(msg);\n    }\n  };\n  Object.defineProperty(config, '_name', {\n    enumerable: false,\n    value: name\n  });\n  return config;\n}\n\nif (process.env.TARGET) {\n  module.exports = getConfig(process.env.TARGET);\n} else {\n  exports.defaultPlugins = defaultPlugins;\n  exports.getBuild = getConfig;\n\n  exports.getAllBuilds = function () {\n    return Object.keys(builds).map(getConfig);\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJwYXRoIiwicmVxdWlyZSIsIm5vZGUiLCJjanMiLCJidWJsZSIsInRlcnNlciIsInZlcnNpb24iLCJwcm9jZXNzIiwiZW52IiwiVkVSU0lPTiIsInJlc29sdmUiLCJwIiwiX19kaXJuYW1lIiwiZGVmYXVsdFBsdWdpbnMiLCJidWlsZHMiLCJlbnRyeSIsImRlc3QiLCJmb3JtYXQiLCJtb2R1bGVOYW1lIiwicGx1Z2lucyIsImdldENvbmZpZyIsIm5hbWUiLCJvcHRzIiwiY29uZmlnIiwiaW5wdXQiLCJleHRlcm5hbCIsIm91dHB1dCIsImZpbGUiLCJnbG9iYWxzIiwiZXhwb3J0cyIsIm9ud2FybiIsIm1zZyIsIndhcm4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJ2YWx1ZSIsIlRBUkdFVCIsIm1vZHVsZSIsImdldEJ1aWxkIiwiZ2V0QWxsQnVpbGRzIiwia2V5cyIsIm1hcCJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLDRCQUFELENBQXBCLEMsQ0FBbUQ7OztBQUNuRCxJQUFNRSxHQUFHLEdBQUdGLE9BQU8sQ0FBQyx3QkFBRCxDQUFuQixDLENBQThDOzs7QUFDOUMsSUFBTUcsS0FBSyxHQUFHSCxPQUFPLENBQUMscUJBQUQsQ0FBckIsQyxDQUE2Qzs7O2VBQzFCQSxPQUFPLENBQUMsc0JBQUQsQztJQUFsQkksTSxZQUFBQSxNLEVBQTJDOzs7QUFDbkQsSUFBTUMsT0FBTyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsT0FBWixJQUF1QlIsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkJLLE9BQWxFOztBQUVBLElBQU1JLE9BQU8sR0FBRyxTQUFWQSxPQUFVLENBQUFDLENBQUMsRUFBSTtBQUNqQixTQUFPWCxJQUFJLENBQUNVLE9BQUwsQ0FBYUUsU0FBYixFQUF1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LE9BQU8sQ0FBQ1UsUUFBUixHQUFtQm5CLFNBQW5COztBQUNBUyxFQUFBQSxPQUFPLENBQUNXLFlBQVIsR0FBdUI7QUFBQSxXQUFNUCxNQUFNLENBQUNRLElBQVAsQ0FBWTNCLE1BQVosRUFBb0I0QixHQUFwQixDQUF3QnRCLFNBQXhCLENBQU47QUFBQSxHQUF2QjtBQUNIIiwic291cmNlUm9vdCI6Ii9Vc2Vycy94aXV4aXVkaW5nL0RvY3VtZW50cy93b3JrL2h5ZHJvZ2VuL3NjcmlwdHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG5jb25zdCBub2RlID0gcmVxdWlyZSgncm9sbHVwLXBsdWdpbi1ub2RlLXJlc29sdmUnKSAvLyDmlK/mjIHnrKzkuInmlrnljIVcbmNvbnN0IGNqcyA9IHJlcXVpcmUoJ3JvbGx1cC1wbHVnaW4tY29tbW9uanMnKSAvLyDovaxjb21tb25qcyB0byBlc1xuY29uc3QgYnVibGUgPSByZXF1aXJlKCdyb2xsdXAtcGx1Z2luLWJ1YmxlJykgLy8g6L2s5Li6ZXM1XG5jb25zdCB7IHRlcnNlciB9ID0gcmVxdWlyZSgncm9sbHVwLXBsdWdpbi10ZXJzZXInKSAvLyDku6PnoIHljovnvKlcbmNvbnN0IHZlcnNpb24gPSBwcm9jZXNzLmVudi5WRVJTSU9OIHx8IHJlcXVpcmUoJy4uL3BhY2thZ2UuanNvbicpLnZlcnNpb25cblxuY29uc3QgcmVzb2x2ZSA9IHAgPT4ge1xuICAgIHJldHVybiBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCcuLi8nLHApO1xufVxuXG5cbi8vIOm7mOiupOmFjee9rlxuY29uc3QgZGVmYXVsdFBsdWdpbnMgPSBbXG4gICAgbm9kZSgpLFxuICAgIGNqcygpLFxuICAgIGJ1YmxlKClcbl07XG5cbmNvbnN0IGJ1aWxkcyA9IHtcbiAgICAnZmUtdXRpbHMnOiB7XG4gICAgICAgIGVudHJ5OiByZXNvbHZlKCdkaXN0L3NyYy9pbmRleC5qcycpLFxuICAgICAgICBkZXN0OiByZXNvbHZlKCdsaWIvZmUtdXRpbHMuanMnKSxcbiAgICAgICAgZm9ybWF0OiAndW1kJyxcbiAgICAgICAgbW9kdWxlTmFtZTogJ2ZlVXRpbHMnLFxuICAgICAgICBwbHVnaW5zOiBkZWZhdWx0UGx1Z2luc1xuICAgIH0sXG4gICAgJ2ZlLXV0aWxzLW1pbic6IHtcbiAgICAgICAgZW50cnk6IHJlc29sdmUoJ2Rpc3Qvc3JjL2luZGV4LmpzJyksXG4gICAgICAgIGRlc3Q6IHJlc29sdmUoJ2xpYi9mZS11dGlscy1taW4uanMnKSxcbiAgICAgICAgZm9ybWF0OiAndW1kJyxcbiAgICAgICAgbW9kdWxlTmFtZTogJ2ZlVXRpbHMnLFxuICAgICAgICBwbHVnaW5zOiBbLi4uZGVmYXVsdFBsdWdpbnMsIHRlcnNlcigpXVxuICAgIH0sXG4gICAgJ2ZlLXV0aWxzLWNqcyc6IHtcbiAgICAgICAgZW50cnk6IHJlc29sdmUoJ2Rpc3Qvc3JjL2luZGV4LmpzJyksXG4gICAgICAgIGRlc3Q6IHJlc29sdmUoJ2xpYi9mZS11dGlscy1janMuanMnKSxcbiAgICAgICAgZm9ybWF0OiAnY2pzJyxcbiAgICAgICAgcGx1Z2luczogZGVmYXVsdFBsdWdpbnNcbiAgICB9LFxuICAgICdmZS11dGlscy1lc20nOiB7XG4gICAgICAgIGVudHJ5OiByZXNvbHZlKCdkaXN0L3NyYy9pbmRleC5qcycpLFxuICAgICAgICBkZXN0OiByZXNvbHZlKCdsaWIvZmUtdXRpbHMtZXNtLmpzJyksXG4gICAgICAgIGZvcm1hdDogJ2VzJyxcbiAgICAgICAgcGx1Z2luczogZGVmYXVsdFBsdWdpbnNcbiAgICB9LFxufVxuXG4vKipcbiAqIOiOt+WPluWvueW6lG5hbWXnmoTmiZPljIXphY3nva5cbiAqIEBwYXJhbSB7Kn0gbmFtZSBcbiAqL1xuZnVuY3Rpb24gZ2V0Q29uZmlnKG5hbWUpIHtcbiAgICBjb25zdCBvcHRzID0gYnVpbGRzW25hbWVdO1xuICAgIGNvbnN0IGNvbmZpZyA9IHtcbiAgICAgICAgaW5wdXQ6IG9wdHMuZW50cnksXG4gICAgICAgIGV4dGVybmFsOiBvcHRzLmV4dGVybmFsIHx8IFtdLFxuICAgICAgICBwbHVnaW5zOiBvcHRzLnBsdWdpbnMgfHwgW10sXG4gICAgICAgIG91dHB1dDoge1xuICAgICAgICAgICAgZmlsZTogb3B0cy5kZXN0LFxuICAgICAgICAgICAgZm9ybWF0OiBvcHRzLmZvcm1hdCxcbiAgICAgICAgICAgIG5hbWU6IG9wdHMubW9kdWxlTmFtZSB8fCAnZmVVdGlscycsXG4gICAgICAgICAgICBnbG9iYWxzOiBvcHRzLmdsb2JhbHMsXG4gICAgICAgICAgICBleHBvcnRzOiAnbmFtZWQnLCAvKiogRGlzYWJsZSB3YXJuaW5nIGZvciBkZWZhdWx0IGltcG9ydHMgKi9cbiAgICAgICAgfSxcbiAgICAgICAgb253YXJuOiAobXNnLCB3YXJuKSA9PiB7XG4gICAgICAgICAgICB3YXJuKG1zZyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoY29uZmlnLCAnX25hbWUnLCB7XG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICB2YWx1ZTogbmFtZVxuICAgIH0pO1xuICAgIHJldHVybiBjb25maWc7XG59XG5cbmlmKHByb2Nlc3MuZW52LlRBUkdFVCkge1xuICAgIG1vZHVsZS5leHBvcnRzID0gZ2V0Q29uZmlnKHByb2Nlc3MuZW52LlRBUkdFVCk7XG59ZWxzZSB7XG4gICAgZXhwb3J0cy5kZWZhdWx0UGx1Z2lucyA9IGRlZmF1bHRQbHVnaW5zO1xuICAgIGV4cG9ydHMuZ2V0QnVpbGQgPSBnZXRDb25maWc7XG4gICAgZXhwb3J0cy5nZXRBbGxCdWlsZHMgPSAoKSA9PiBPYmplY3Qua2V5cyhidWlsZHMpLm1hcChnZXRDb25maWcpO1xufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "path",
        "require",
        "node",
        "cjs",
        "buble",
        "terser",
        "version",
        "process",
        "env",
        "VERSION",
        "resolve",
        "p",
        "__dirname",
        "defaultPlugins",
        "builds",
        "entry",
        "dest",
        "format",
        "moduleName",
        "plugins",
        "getConfig",
        "name",
        "opts",
        "config",
        "input",
        "external",
        "output",
        "file",
        "globals",
        "exports",
        "onwarn",
        "msg",
        "warn",
        "Object",
        "defineProperty",
        "enumerable",
        "value",
        "TARGET",
        "module",
        "getBuild",
        "getAllBuilds",
        "keys",
        "map"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/xiuxiuding/Documents/work/hydrogen/scripts",
      "sourcesContent": [
        "const path = require('path')\nconst node = require('rollup-plugin-node-resolve') // 支持第三方包\nconst cjs = require('rollup-plugin-commonjs') // 转commonjs to es\nconst buble = require('rollup-plugin-buble') // 转为es5\nconst { terser } = require('rollup-plugin-terser') // 代码压缩\nconst version = process.env.VERSION || require('../package.json').version\n\nconst resolve = p => {\n    return path.resolve(__dirname,'../',p);\n}\n\n\n// 默认配置\nconst defaultPlugins = [\n    node(),\n    cjs(),\n    buble()\n];\n\nconst builds = {\n    'fe-utils': {\n        entry: resolve('dist/src/index.js'),\n        dest: resolve('lib/fe-utils.js'),\n        format: 'umd',\n        moduleName: 'feUtils',\n        plugins: defaultPlugins\n    },\n    'fe-utils-min': {\n        entry: resolve('dist/src/index.js'),\n        dest: resolve('lib/fe-utils-min.js'),\n        format: 'umd',\n        moduleName: 'feUtils',\n        plugins: [...defaultPlugins, terser()]\n    },\n    'fe-utils-cjs': {\n        entry: resolve('dist/src/index.js'),\n        dest: resolve('lib/fe-utils-cjs.js'),\n        format: 'cjs',\n        plugins: defaultPlugins\n    },\n    'fe-utils-esm': {\n        entry: resolve('dist/src/index.js'),\n        dest: resolve('lib/fe-utils-esm.js'),\n        format: 'es',\n        plugins: defaultPlugins\n    },\n}\n\n/**\n * 获取对应name的打包配置\n * @param {*} name \n */\nfunction getConfig(name) {\n    const opts = builds[name];\n    const config = {\n        input: opts.entry,\n        external: opts.external || [],\n        plugins: opts.plugins || [],\n        output: {\n            file: opts.dest,\n            format: opts.format,\n            name: opts.moduleName || 'feUtils',\n            globals: opts.globals,\n            exports: 'named', /** Disable warning for default imports */\n        },\n        onwarn: (msg, warn) => {\n            warn(msg);\n        }\n    }\n\n    Object.defineProperty(config, '_name', {\n        enumerable: false,\n        value: name\n    });\n    return config;\n}\n\nif(process.env.TARGET) {\n    module.exports = getConfig(process.env.TARGET);\n}else {\n    exports.defaultPlugins = defaultPlugins;\n    exports.getBuild = getConfig;\n    exports.getAllBuilds = () => Object.keys(builds).map(getConfig);\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1636430325555
  }
}